name: Deploy monitoring

permissions:
  actions: write
  pull-requests: write
  deployments: write
  contents: write
  checks: write

# on:
#   push:
#     tags:
#       - "*"


on: 
  pull_request:

jobs:
  check-monitoring-changes:
    name: Check for changes in monitoring directory
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Get changed files in the monitoring folder
        id: monitoring_changes
        uses: tj-actions/changed-files@v45
        with:
          files: monitoring/**
        
      - name: Fail if no changes in monitoring directory
        if: steps.monitoring_changes.outputs.any_changed == 'false'
        run: echo "No changes in monitoring directory. Ending workflow gracefully."
        continue-on-error: true
          

  scp-files:
    name: Scp necessary files to monitoring VM
    runs-on: ubuntu-latest
    needs: check-monitoring-changes
    if: needs.check-monitoring-changes.result == 'success'
    steps:
      - uses: actions/checkout@v4

      - name: scp docker-compose.yml to VM
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ vars.MONITORING_VM_IP_ADDRESS }}
          username: ${{ vars.VM_USER }}
          key: ${{ secrets.VM_PRIVATE_KEY }}
          source: "./monitoring/docker-compose.yml"
          target: "."

      - name: scp nginx.conf to VM
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ vars.MONITORING_VM_IP_ADDRESS }}
          username: ${{ vars.VM_USER }}
          key: ${{ secrets.VM_PRIVATE_KEY }}
          source: "./monitoring/nginx.conf"
          target: "."

      - name: scp prometheus.yml to VM
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ vars.MONITORING_VM_IP_ADDRESS }}
          username: ${{ vars.VM_USER }}
          key: ${{ secrets.VM_PRIVATE_KEY }}
          source: "./monitoring/prometheus.yml"
          target: "."

  execute-commands:
    name: Executing remote SSH commands
    runs-on: ubuntu-latest
    needs: scp-files
    if: needs.scp-files.result == 'success'
    steps:
      - name: Executing remote SSH commands
        uses: appleboy/ssh-action@v1.0.3
        env:
          USERNAME: ${{ secrets.GRAFANA_USERNAME }}
          PASSWORD: ${{ secrets.GRAFANA_PASSWORD }}
        with:
          host: ${{ vars.MONITORING_VM_IP_ADDRESS }}
          username: ${{ vars.VM_USER }}
          key: ${{ secrets.VM_PRIVATE_KEY }}
          envs: USERNAME,PASSWORD
          script: |
            echo "cd to working directory"
            cd ./monitoring

            echo "Ensure Docker is installed"
            docker --version

            echo "Insert variables for Grafana"
            echo "[security]" > custom.ini
            echo "admin_user=$USERNAME" >> custom.ini
            echo "admin_password=$PASSWORD" >> custom.ini

            echo "Remove existing containers"
            sudo docker compose down

            echo "Build containers anew"
            sudo docker compose up -d
